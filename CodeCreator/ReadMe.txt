使用方式：
在项目页中建立一个项目
（新增项目时点击添加按钮）
如果是原有的项目，在左边list中选择一项点击加载
如果是编辑原有项目，先加载，再修改，最后点保存

生成页：
左侧是数据表的列表
（第一次使用时点击刷新，后面有增删也点击刷新）
选中一张数据表，会把这张表的字段加载到中间的字段表中
如果字段有更新就加载后点中间的刷新按钮，会自动增删字段，未变更的字段会保留配置
字段属性修改完成后点击保存

右侧是模板列表
字段属性配置完成后在左边勾选要生成的表，右边勾选要生成的代码，点击生成，会自动创建代码文件。
创建完成后会打开结果目录，把代码拷到项目对应的目录中即可使用。

L.C 2018-8-13
在原有的自动生成页面工具基础上创作。
原来的逻辑：配置一张属性表，加载页面的时候读取属性表中的配置，然后使用razor动态生成页面
现在的逻辑：属性配置和模板使用XML，同时生成前后端代码等文件，把文件放到需要的项目中就可以运行。
这样的优点是可以在生成代码的基础上进行调整，添加或修改业务逻辑，进行样式调整，etc
（需要在项目中预定义模板）
目前设想的输出类型：
nhibernate映射文件（BusnissObject，HbmMaps）
MVC-M：查询参数模板（业务数据model直接使用BusnissObject）
MVC-V：detail、list等的cshtml文件
MVC-C：controller.cs文件，包含各种视图、基础CURD操作。
JS文件：包含ajax、报表、table初始化等代码
报表：使用echarts的报表页面，包含前后端代码

L.C 2018-8-17
